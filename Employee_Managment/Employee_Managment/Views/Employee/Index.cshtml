@model IEnumerable<Employee_Managment.Models.Employee>
<div class="container">
    <div class="card shadow-lg p-3 mb-5 bg-white rounded">
        <div class="card-body">
            <h2 class="card-title">Employee List</h2>
            <p>
                <a asp-action="Create" class="btn mb-2">Create New</a>
                <a asp-action="ExportToExcel" asp-route-selectedDate="@ViewBag.SelectedDate.ToString("yyyy-MM-dd")" class="btn mb-2">Export to Excel</a>
            </p>
            <label for="selectedDate">Select Date:</label>
            <input type="date" id="selectedDate" name="selectedDate" value="@ViewBag.SelectedDate.ToString("yyyy-MM-dd")" class="form-control mb-1" style="width: 150px;" max="@DateTime.Now.ToString("yyyy-MM-dd")">
            <div class="table-responsive">
                <table class="table table-hover table-bordered">
                    <thead>
                        <tr class="employee-header">
                            <th>Punch In</th>
                            <th>Name</th>
                            <th>Basic + DA</th>
                            @* <th>Per Day</th> *@
                            <th>Total Days</th>
                            <th>Present Days</th>
                            <th>Absent Days</th>
                            @* <th>Sunday Holiday</th> *@
                            <th>CL+</th>
                            @*      <th>Total Payable Days</th>
                            <th>Payable Amount</th>
                            <th>Professional Tax</th>
                            <th>P.F@12 %</th>
                            <th>ESIC@0.75 %</th>
                            <th>Extra Deduction/Arrears</th>
                            <th>Net Amount Payable</th> *@
                            @*  <th></th>
                            <th></th>
                            <th></th> *@
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr class="employee-row">
                                       @*  <td>
                                    <button class="btn btn-primary punch-in" data-employee-id="@item.Id" data-toggle="modal" data-target="#punchModal">
                                        Punch 
                                    </button>
                                </td> *@
                                <td class="Name">@item.Name</td>
                                <td class="BasicAndDA">@item.BasicAndDA</td>
                                @*                                     <td class="PerDay">@item.PerDay</td> *@
                                <td class="TotalDays">@item.TotalDays</td>
                                <td class="PresentDays">@item.PresentDays</td>
                                <td class="AbsentDays">@item.AbsentDays</td>
                                @*   <td class="SundayHoliday">@item.SundayHoliday</td> *@
                                <td class="CL">@item.CL</td>
                                @*   <td class="TotalPayableDays">@item.TotalPayableDays</td>
                            <td class="PayableAmount">@item.PayableAmount</td>
                            <td class="ProfessionalTax">@item.ProfessionalTax</td>
                            <td class="PF">@item.PF</td>
                            <td class="ESIC">@item.ESIC</td>
                            <td class="ExtraDeduction">@item.ExtraDeduction</td>
                            <td class="NetAmountPayable">@item.NetAmountPayable</td> *@
                                <td>
                                    <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-primary btn-sm">Edit</a>
                                </td>
                                <td>
                                    <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-info btn-sm">Details</a>
                                </td>
                                <td>
                                    <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-danger btn-sm">Delete</a>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
                <div class="modal fade" id="punchModal" tabindex="-1" role="dialog" aria-labelledby="punchModalLabel" aria-hidden="true">
                    <div class="modal-dialog" role="document">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h5 class="modal-title" id="punchModalLabel">Punch In / Punch Out</h5>
                                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                    <span aria-hidden="true">&times;</span>
                                </button>
                            </div>
                            <div class="modal-body">
                                <div class="form-group">
                                    <label for="punchInTime">Punch In Time:</label>
                                    <input type="time" class="form-control" id="punchInTime" required>
                                </div>
                                <div class="form-group">
                                    <label for="punchOutTime">Punch Out Time:</label>
                                    <input type="time" class="form-control" id="punchOutTime">
                                </div>
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                                <button type="button" class="btn btn-primary" id="savePunch" data-create-url="@Url.Action("CreatePunch", "Employee")">Save</button>

                            </div>
                        </div>
                    </div>
                </div>


            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    @if (TempData["Message"] != null)
    {
        <script>
            console.log('Message:', '@TempData["Message"]');
            const Toast = Swal.mixin({
                toast: true,
                position: 'top-end',
                showConfirmButton: false,
                timer: 5000,
                timerProgressBar: true,
                didOpen: (toast) => {
                    toast.addEventListener('mouseenter', Swal.stopTimer)
                    toast.addEventListener('mouseleave', Swal.resumeTimer)
                }
            }

                        Toast.fire({
                icon: 'success',
                title: '@TempData["Message"]'
            });
        </script>
    }
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.0/umd/popper.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
    <script>
        // Listen for changes to the date input
        document.getElementById("selectedDate").addEventListener("change", function () {
            var selectedDate = this.value;
            window.location.href = '/Employee/Index?selectedDate=' + selectedDate;
        });
        $('#savePunch').click(function () {
            console.log('Save button clicked');
            var employeeId = $(this).data('employee-id');
            var punchInTime = $('#punchInTime').val();
            var punchOutTime = $('#punchOutTime').val();
            var selectedDate = $('#selectedDate').val();

            // Calculate the punch duration in minutes
            var punchDuration = calculatePunchDuration(punchInTime, punchOutTime);

            // Format punchIn and punchOut in "YYYY-MM-DD HH:MI:SS" format
            var formattedPunchIn = selectedDate + ' ' + punchInTime + ':00';
            var formattedPunchOut = selectedDate + ' ' + punchOutTime + ':00';

            // Create a PunchEvent object to send to the controller
            var punchEvent = {
                EmployeeId: "1",
                PunchIn: formattedPunchIn,
                PunchOut: formattedPunchOut,
                PunchDuration: punchDuration
            };
            var createUrl = $('#savePunch').data('create-url');
            // Perform AJAX request to PunchEventsController
            $.post(createUrl, { punchEvent: punchEvent }, function (data) {
                // Handle success or error
                if (data.success) {
                    location.reload(); // Reload the page after a successful punch
                } else {
                    alert(data.message); // Display an error message
                }
            });

            $('#punchModal').modal('hide');
        });

        function calculatePunchDuration(punchIn, punchOut) {
            var punchInTime = new Date('1970-01-01T' + punchIn + 'Z');
            var punchOutTime = new Date('1970-01-01T' + punchOut + 'Z');
            var durationInMilliseconds = punchOutTime - punchInTime;
            var durationInMinutes = durationInMilliseconds / (1000 * 60);
            return durationInMinutes;
        }
    </script>
}

